<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ma.Services.Appointments</name>
    </assembly>
    <members>
        <member name="T:Ma.Services.Appointments.AppointmentHandler">
            <summary>
            Represents a handler of appointments.
            </summary>
        </member>
        <member name="M:Ma.Services.Appointments.AppointmentHandler.ParseFile(System.Guid,System.String)">
            <summary>
            Parse a file to appointments.
            </summary>
            <param name="userId">User ID who creates the appointments.</param>
            <param name="text">A text of appointments.</param>
        </member>
        <member name="T:Ma.Services.Appointments.AppointmentsController">
            <summary>
            Represents an appointment controller.
            </summary>
        </member>
        <member name="M:Ma.Services.Appointments.AppointmentsController.#ctor(Ma.Services.Appointments.ApplicationDbContext,AutoMapper.IMapper)">
            <summary>
            Creates a new <see cref="T:Ma.Services.Appointments.AppointmentsController"/>.
            </summary>
            <param name="context">The <see cref="T:Ma.Services.Appointments.ApplicationDbContext"/> database store.</param>
            <param name="mapper">The <see cref="T:AutoMapper.IMapper"/> to map objects to DTOs.</param>
        </member>
        <member name="M:Ma.Services.Appointments.AppointmentsController.Get(System.Int32,System.Int32)">
            <summary>
            Get list of all appointments.
            </summary>          
            <param name="pageSize">Amount of items to retrieve. Defaults to 10. Must be valid 
            integer between 0 and 100.</param>
            <param name="pageIndex">The index of paginated page.</param>
            <returns>List of appointments.</returns>
            <response code="200">Success.</response>       
            <response code="401">Access denied.</response>          
            <response code="500">Internal server error.</response>
        </member>
        <member name="M:Ma.Services.Appointments.AppointmentsController.GetByUserId(System.Guid)">
            <summary>
            Get list of appointments by user id.
            </summary>   
            <param name="userId">Unique user id.</param>
            <returns>List of appointments.</returns>
            <response code="200">Success.</response>      
            <response code="400">Invalid input parameter.</response>  
            <response code="401">Access denied.</response>    
            <response code="500">Internal server error.</response>
        </member>
        <member name="M:Ma.Services.Appointments.AppointmentsController.CreateAsync(Ma.Services.Appointments.Appointment)">
            <summary>
            Create new appointment.
            </summary>   
            <param name="appointment">The appointment to create.</param>
            <returns>True if successful.</returns>
            <response code="200">Success.</response>    
            <response code="400">Invalid input parameter.</response> 
            <response code="401">Access denied.</response>    
            <response code="404">Not found.</response>    
            <response code="500">Internal server error.</response>
        </member>
        <member name="M:Ma.Services.Appointments.AppointmentsController.UpdateAsync(System.Guid,Ma.Services.Appointments.Appointment)">
            <summary>
            Update an appointment.
            </summary>   
            <param name="id">The unique id of the appointment.</param>
            <param name="appointment">The appointment to update.</param>
            <returns>True if successful.</returns>
            <response code="200">Success.</response>    
            <response code="400">Invalid input parameter.</response> 
            <response code="401">Access denied.</response>   
            <response code="404">Not found.</response>    
            <response code="500">Internal server error.</response>
        </member>
        <member name="M:Ma.Services.Appointments.AppointmentsController.DeleteAsync(System.Guid)">
            <summary>
            Delete an appointment from database.
            </summary>   
            <param name="id">The unique id of the appointment.</param>
            <returns>Returns true if item was successful deleted from database.</returns>
            <response code="200">Success.</response>    
            <response code="401">Access denied.</response>    
            <response code="404">Appointment hasn't been found in database.</response>    
            <response code="500">Internal server error.</response>
        </member>
        <member name="M:Ma.Services.Appointments.AppointmentsController.ImportAsync(System.Guid,System.String)">
            <summary>
            Import a file with appointments.
            </summary>   
            <param name="userId">The user id who creates the appointment.</param>
            <param name="text">The text with appointments.</param>
            <returns>True if successful.</returns>
            <response code="200">Success.</response>    
            <response code="400">Invalid input parameter.</response> 
            <response code="401">Access denied.</response>    
            <response code="404">Not found.</response>    
            <response code="500">Internal server error.</response>
        </member>
        <member name="T:Ma.Services.Appointments.MappingProfile">
            <summary>
            Represents the mapper from object to DTO (Date Transfer Object)
            </summary>
        </member>
        <member name="M:Ma.Services.Appointments.MappingProfile.#ctor">
            <summary>
            Creates a new <see cref="T:Ma.Services.Appointments.MappingProfile"/>.
            </summary>        
        </member>
        <member name="T:Ma.Services.Appointments.MigrationExtensions">
            <summary>
            Represents the extensions for data EF migrations. 
            </summary>
        </member>
        <member name="M:Ma.Services.Appointments.MigrationExtensions.AutoMigrateDatabase(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Migrate pending database changes. 
            </summary>
        </member>
        <member name="T:Ma.Services.Appointments.Appointment">
            <summary>
            Represents an appointment.
            </summary>
        </member>
        <member name="P:Ma.Services.Appointments.Appointment.Id">
            <summary>
            Gets or sets the unique id of this appointment.
            </summary>   
        </member>
        <member name="P:Ma.Services.Appointments.Appointment.UserId">
            <summary>
            Gets or sets the user id who has created this appointment.
            </summary>
        </member>
        <member name="P:Ma.Services.Appointments.Appointment.Title">
            <summary>
            Gets or sets the short title of the appointment.
            </summary>
        </member>
        <member name="P:Ma.Services.Appointments.Appointment.Date">
            <summary>
            Gets or sets the reference date used for appointment  
            </summary>
        </member>
        <member name="T:Ma.Services.Appointments.AppointmentDTO">
            <summary>
            Represents an appointment DTO.
            </summary>
        </member>
        <member name="P:Ma.Services.Appointments.AppointmentDTO.Title">
            <summary>
            Gets or sets the short title of the appointment.
            </summary>    
        </member>
        <member name="P:Ma.Services.Appointments.AppointmentDTO.Date">
            <summary>
            Gets or sets the reference date used for appointment.
            </summary>
        </member>
    </members>
</doc>
